<UserControl
    x:Class="DevPrompt.ProcessWorkspace.UI.ProcessWorkspaceControl"
    x:ClassModifier="internal"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:local="clr-namespace:DevPrompt.ProcessWorkspace"
    xmlns:vm="clr-namespace:DevPrompt.ProcessWorkspace.UI.ViewModels"
    xmlns:controls="clr-namespace:DevPrompt.ProcessWorkspace.UI.Controls"
    xmlns:util="clr-namespace:DevPrompt.ProcessWorkspace.Utility"
    mc:Ignorable="d"
    d:DesignHeight="450" d:DesignWidth="800"
    DataContext="{Binding ViewModel, RelativeSource={RelativeSource Mode=Self}}">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />
        <util:ObjectToVisibilityConverter x:Key="ObjectToVisibility" />
        <util:ActiveToBoolConverter x:Key="ActiveToBool" />
        <util:VisibleToBoolConverter x:Key="VisibleToBool" />
        <util:FirstBrushConverter x:Key="FirstBrush" />
        <Grid x:Key="ControlDarkDarkElement" Background="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
        <Grid x:Key="ControlElement" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        <Grid x:Key="WindowTextElement" Background="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
        <Grid x:Key="WindowElement" Background="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />

        <!-- Panel that owns all of the tab buttons and computes layout -->
        <ItemsPanelTemplate x:Key="TabItemsPanelTemplate">
            <TabPanel Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        </ItemsPanelTemplate>

        <!-- Simple look for the close button -->
        <ControlTemplate x:Key="TabCloseButtonTemplate" TargetType="{x:Type Button}">
            <Border x:Name="BorderBack" Background="{TemplateBinding Background}">
                <ContentPresenter Focusable="False" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter TargetName="BorderBack" Property="Background" Value="Transparent" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <!-- Title and close button -->
        <DataTemplate x:Key="TabButtonContentTemplate" DataType="{x:Type vm:TabVM}">
            <Grid x:Name="RootGrid">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" MinWidth="48" />
                    <ColumnDefinition Width="16" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Column="0"
                    Margin="4"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="{Binding Name, Mode=OneWay}" />
                <Button
                    x:Name="CloseButton"
                    Grid.Column="1"
                    Width="16"
                    Focusable="False"
                    Background="#4FFF0000"
                    Command="{Binding CloseCommand}"
                    Visibility="{Binding CloseCommand, Converter={StaticResource ObjectToVisibility}}"
                    Template="{StaticResource TabCloseButtonTemplate}">
                    <Button.Foreground>
                        <MultiBinding Converter="{StaticResource FirstBrush}">
                            <Binding Path="ForegroundSelectedBrush" />
                            <Binding Source="{StaticResource WindowTextElement}" Path="Background" />
                        </MultiBinding>
                    </Button.Foreground>
                    <Path Data="M 0,0 L 8,8 M 0,8 L 8,0" StrokeThickness="1" Stroke="{Binding Foreground, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" />
                </Button>
            </Grid>
            <DataTemplate.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ActiveState, Mode=OneWay, Converter={StaticResource ActiveToBool}}" Value="False" />
                        <Condition Binding="{Binding IsMouseOver, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="CloseButton" Property="Visibility" Value="Collapsed" />
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding ActiveState, Mode=OneWay, Converter={StaticResource ActiveToBool}}" Value="False">
                    <Setter TargetName="CloseButton" Property="Foreground">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource FirstBrush}">
                                <Binding Path="ForegroundUnselectedBrush" />
                                <Binding Source="{StaticResource ControlDarkDarkElement}" Path="Background" />
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <!-- Look of the whole tab button -->
        <ControlTemplate x:Key="TabButtonTemplate" TargetType="{x:Type Button}">
            <Grid SnapsToDevicePixels="True">
                <Border x:Name="BorderBack" Background="{TemplateBinding Background}" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}">
                    <ContentPresenter Focusable="False" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                </Border>
            </Grid>
        </ControlTemplate>

        <DataTemplate x:Key="TabItemTemplate" DataType="{x:Type vm:TabVM}">
            <Button
                x:Name="RootButton"
                Selector.IsSelected="{Binding ActiveState, Mode=OneWay, Converter={StaticResource VisibleToBool}}"
                Command="{Binding ActivateCommand}"
                MouseDown="OnTabButtonMouseDown"
                PreviewMouseMove="OnTabButtonMouseMoveEvent"
                GotMouseCapture="OnTabButtonMouseCaptureEvent"
                LostMouseCapture="OnTabButtonMouseCaptureEvent"
                Loaded="OnTabButtonLoaded"
                Unloaded="OnTabButtonUnloaded"
                ContextMenuOpening="OnTabButtonContextMenuOpening"
                Focusable="False"
                BorderThickness="1,1,1,0"
                BorderBrush="Transparent"
                Content="{Binding}"
                ToolTip="{Binding Tooltip}"
                Template="{StaticResource TabButtonTemplate}"
                ContentTemplate="{StaticResource TabButtonContentTemplate}">
                <Button.ContextMenu>
                    <ContextMenu Opened="OnTabContextMenuOpened" Closed="OnTabContextMenuClosed">
                        <Separator Tag="[Plugins]" Visibility="Collapsed" />
                        <MenuItem Header="{x:Static local:Resources.Command_Close}" InputGestureText="Ctrl+F4" Command="{Binding CloseCommand}" Visibility="{Binding CloseCommand, Converter={StaticResource ObjectToVisibility}}" />
                        <MenuItem Header="{x:Static local:Resources.Command_CloseAllButThis}" Command="{Binding CloseAllButThisCommand}" Visibility="{Binding CloseAllButThisCommand, Converter={StaticResource ObjectToVisibility}}" />
                    </ContextMenu>
                </Button.ContextMenu>
                <Button.Foreground>
                    <MultiBinding Converter="{StaticResource FirstBrush}">
                        <Binding Path="ForegroundUnselectedBrush" />
                        <Binding Source="{StaticResource ControlDarkDarkElement}" Path="Background" />
                    </MultiBinding>
                </Button.Foreground>
                <Button.Background>
                    <MultiBinding Converter="{StaticResource FirstBrush}">
                        <Binding Path="BackgroundUnselectedBrush" />
                        <Binding Source="{StaticResource ControlElement}" Path="Background" />
                    </MultiBinding>
                </Button.Background>
            </Button>
            <!-- Change colors for an active tab, the default colors are for inactive -->
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding ActiveState, Mode=OneWay, Converter={StaticResource ActiveToBool}}" Value="True">
                    <Setter TargetName="RootButton" Property="Foreground">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource FirstBrush}">
                                <Binding Path="ForegroundSelectedBrush" />
                                <Binding Source="{StaticResource WindowTextElement}" Path="Background" />
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                    <Setter TargetName="RootButton" Property="Background">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource FirstBrush}">
                                <Binding Path="BackgroundSelectedBrush" />
                                <Binding Source="{StaticResource WindowElement}" Path="Background" />
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                    <Setter TargetName="RootButton" Property="BorderBrush" Value="{Binding Background, Source={StaticResource WindowTextElement}}" />
                </DataTrigger>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ActiveState, Mode=OneWay, Converter={StaticResource ActiveToBool}}" Value="False" />
                        <Condition Binding="{Binding IsMouseOver, ElementName=RootButton}" Value="True" />
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="RootButton" Property="BorderBrush">
                        <Setter.Value>
                            <MultiBinding Converter="{StaticResource FirstBrush}">
                                <Binding Path="ForegroundUnselectedBrush" />
                                <Binding Source="{StaticResource ControlDarkDarkElement}" Path="Background" />
                            </MultiBinding>
                        </Setter.Value>
                    </Setter>
                </MultiDataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <!-- Used by ProcessTab.CreateTabColorMenu -->
        <DataTemplate x:Key="TabThemeMenuHeaderTemplate" DataType="{x:Type vm:TabThemeVM}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20" />
                    <ColumnDefinition Width="5" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <Label Content="{Binding Header}" />
                <Border
                    Grid.Column="2"
                    Width="100"
                    Height="20"
                    BorderThickness="1"
                    BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                    Background="{Binding BackgroundBrush}"
                    SnapsToDevicePixels="True">
                    <Canvas Visibility="{Binding DefaultVisibility}">
                        <Line X1="0" Y1="0" X2="98" Y2="18" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" StrokeThickness="1" />
                        <Line X1="0" Y1="18" X2="98" Y2="0" Stroke="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" StrokeThickness="1" />
                    </Canvas>
                </Border>
            </Grid>
        </DataTemplate>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <controls:DragItemsControl
            x:Name="tabItemsControl"
            Grid.Row="0"
            Focusable="False"
            ItemsSource="{Binding Tabs}"
            ItemsPanel="{StaticResource TabItemsPanelTemplate}"
            ItemTemplate="{StaticResource TabItemTemplate}" />

        <Border Grid.Row="1" x:Name="processHostHolder" BorderThickness="0" />
        <Border Grid.Row="1" x:Name="viewElementHolder" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Visibility="Collapsed" KeyboardNavigation.TabNavigation="Cycle" />
    </Grid>
</UserControl>
