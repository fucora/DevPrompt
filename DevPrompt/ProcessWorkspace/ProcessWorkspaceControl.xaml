<UserControl
    x:Class="DevPrompt.ProcessWorkspace.ProcessWorkspaceControl"
    x:ClassModifier="internal"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
    xmlns:controls="clr-namespace:DevPrompt.UI.Controls"
    xmlns:convert="clr-namespace:DevPrompt.Utility.Converters"
    xmlns:vm="clr-namespace:DevPrompt.UI.ViewModels"
    mc:Ignorable="d"
    d:DesignHeight="450" d:DesignWidth="800"
    DataContext="{Binding ViewModel, RelativeSource={RelativeSource Mode=Self}}">

    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />
        <convert:ObjectToVisibilityConverter x:Key="ObjectToVisibility" />
        <convert:ActiveToBoolConverter x:Key="ActiveToBool" />
        <convert:VisibleToBoolConverter x:Key="VisibleToBool" />

        <ItemsPanelTemplate x:Key="TabItemsPanelTemplate">
            <TabPanel Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        </ItemsPanelTemplate>

        <ControlTemplate x:Key="TabCommandButtonTemplate" TargetType="{x:Type Button}">
            <Border x:Name="BorderBack" Background="{TemplateBinding Background}">
                <ContentPresenter Focusable="False" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter TargetName="BorderBack" Property="Background" Value="Transparent" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <DataTemplate x:Key="TabButtonContentTemplate" DataType="{x:Type vm:ITabVM}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" MinWidth="48" />
                    <ColumnDefinition Width="16" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Column="0"
                    Margin="4"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="{Binding Name, Mode=OneWay}" />
                <Button
                    x:Name="CloseButton"
                    Grid.Column="1"
                    Width="16"
                    Focusable="False"
                    Background="#3FFF0000"
                    Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"
                    Command="{Binding CloseCommand}"
                    Visibility="{Binding CloseCommand, Converter={StaticResource ObjectToVisibility}}"
                    Template="{StaticResource TabCommandButtonTemplate}">
                    <Path Data="M 0,0 L 8,8 M 0,8 L 8,0" StrokeThickness="1" Stroke="{Binding Foreground, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" />
                </Button>
            </Grid>
            <DataTemplate.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding ActiveState, Mode=OneWay, Converter={StaticResource ActiveToBool}}" Value="False" />
                        <Condition Binding="{Binding IsMouseOver, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="CloseButton" Property="Visibility" Value="Collapsed" />
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding ActiveState, Mode=OneWay, Converter={StaticResource ActiveToBool}}" Value="False">
                    <Setter TargetName="CloseButton" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="TabItemTemplate" DataType="{x:Type vm:ITabVM}">
            <Button
                x:Name="RootButton"
                Selector.IsSelected="{Binding ActiveState, Mode=OneWay, Converter={StaticResource VisibleToBool}}"
                Command="{Binding ActivateCommand}"
                MouseDown="OnTabButtonMouseDown"
                PreviewMouseMove="OnTabButtonMouseMoveEvent"
                GotMouseCapture="OnTabButtonMouseCaptureEvent"
                LostMouseCapture="OnTabButtonMouseCaptureEvent"
                Loaded="OnTabButtonLoaded"
                Unloaded="OnTabButtonUnloaded"
                ContextMenuOpening="OnTabButtonContextMenuOpening"
                Padding="0"
                BorderThickness="1,1,1,0"
                Focusable="False"
                Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                BorderBrush="Transparent"
                Content="{Binding}"
                ToolTip="{Binding Tooltip}"
                HorizontalContentAlignment="Stretch"
                ContentTemplate="{StaticResource TabButtonContentTemplate}">
                <Button.ContextMenu>
                    <ContextMenu Opened="OnTabContextMenuOpened" Closed="OnTabContextMenuClosed">
                        <Separator Tag="[Plugins]" Visibility="Collapsed" />
                        <MenuItem Header="C_lose" InputGestureText="Ctrl+F4" Command="{Binding CloseCommand}" Visibility="{Binding CloseCommand, Converter={StaticResource ObjectToVisibility}}" />
                        <MenuItem Header="Close All But This" Command="{Binding CloseAllButThisCommand}" Visibility="{Binding CloseAllButThisCommand, Converter={StaticResource ObjectToVisibility}}" />
                    </ContextMenu>
                </Button.ContextMenu>
            </Button>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding ActiveState, Mode=OneWay, Converter={StaticResource ActiveToBool}}" Value="True">
                    <Setter TargetName="RootButton" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
                    <Setter TargetName="RootButton" Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
                    <Setter TargetName="RootButton" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <controls:DragItemsControl
            x:Name="tabItemsControl"
            Grid.Row="0"
            Focusable="False"
            ItemsSource="{Binding Tabs}"
            ItemsPanel="{StaticResource TabItemsPanelTemplate}"
            ItemTemplate="{StaticResource TabItemTemplate}" />

        <Border Grid.Row="1" x:Name="processHostHolder" BorderThickness="0" />
        <Border Grid.Row="1" x:Name="viewElementHolder" BorderThickness="0,1,0,0" BorderBrush="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" Visibility="Collapsed" KeyboardNavigation.TabNavigation="Cycle" />
    </Grid>
</UserControl>
