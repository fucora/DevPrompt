<Window x:Class="DevPrompt.UI.MainWindow"
        x:ClassModifier="internal"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:dp="clr-namespace:DevPrompt"
        xmlns:local="clr-namespace:DevPrompt.UI"
        mc:Ignorable="d"
        Width="980"
        Height="800"
        Activated="OnActivated"
        Deactivated="OnDeactivated"
        Loaded="OnLoaded"
        Unloaded="OnUnloaded"
        Closing="OnClosing"
        Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
        DataContext="{Binding ViewModel, RelativeSource={RelativeSource Mode=Self}}"
        d:DataContext="{d:DesignInstance local:MainWindowVM, IsDesignTimeCreatable=True}"
        Title="{Binding WindowTitle}">

    <Window.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisibility" />

        <ItemsPanelTemplate x:Key="TabItemsPanelTemplate">
            <TabPanel Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" />
        </ItemsPanelTemplate>

        <ControlTemplate x:Key="TabCommandButtonTemplate" TargetType="{x:Type Button}">
            <Border x:Name="BorderBack" Background="{TemplateBinding Background}">
                <ContentPresenter Focusable="False" HorizontalAlignment="Center" VerticalAlignment="Center" />
            </Border>
            <ControlTemplate.Triggers>
                <Trigger Property="IsMouseOver" Value="False">
                    <Setter TargetName="BorderBack" Property="Background" Value="Transparent" />
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <DataTemplate x:Key="TabButtonContentTemplate" DataType="{x:Type local:ProcessVM}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" MinWidth="48" />
                    <ColumnDefinition Width="16" />
                </Grid.ColumnDefinitions>
                <TextBlock
                    Grid.Column="0"
                    Margin="4"
                    HorizontalAlignment="Center"
                    VerticalAlignment="Center"
                    Text="{Binding ExpandedTabName, Mode=OneWay}" />
                <Button
                    x:Name="CloseButton"
                    Grid.Column="1"
                    Width="16"
                    Focusable="False"
                    Background="#3FFF0000"
                    Foreground="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"
                    Command="{Binding CloseCommand}"
                    Template="{StaticResource TabCommandButtonTemplate}">
                    <Path Data="M 0,0 L 8,8 M 0,8 L 8,0" StrokeThickness="1" Stroke="{Binding Foreground, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" />
                </Button>
            </Grid>
            <DataTemplate.Triggers>
                <MultiDataTrigger>
                    <MultiDataTrigger.Conditions>
                        <Condition Binding="{Binding Active, Mode=OneWay}" Value="False" />
                        <Condition Binding="{Binding IsMouseOver, Mode=OneWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}}" Value="False" />
                    </MultiDataTrigger.Conditions>
                    <Setter TargetName="CloseButton" Property="Visibility" Value="Collapsed" />
                </MultiDataTrigger>
                <DataTrigger Binding="{Binding Active, Mode=OneWay}" Value="False">
                    <Setter TargetName="CloseButton" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>

        <DataTemplate x:Key="TabItemTemplate" DataType="{x:Type local:ProcessVM}">
            <Button
                x:Name="RootButton"
                Selector.IsSelected="{Binding Active, Mode=OneWay}"
                Command="{Binding ActivateCommand}"
                MouseDown="OnTabButtonMouseDown"
                PreviewMouseMove="OnTabButtonMouseMoveEvent"
                GotMouseCapture="OnTabButtonMouseCaptureEvent"
                LostMouseCapture="OnTabButtonMouseCaptureEvent"
                Padding="0"
                BorderThickness="1,1,1,0"
                Focusable="False"
                Foreground="{DynamicResource {x:Static SystemColors.ControlDarkDarkBrushKey}}"
                Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"
                BorderBrush="Transparent"
                Content="{Binding}"
                ToolTip="{Binding Title}"
                HorizontalContentAlignment="Stretch"
                ContentTemplate="{StaticResource TabButtonContentTemplate}">
                <Button.ContextMenu>
                    <ContextMenu Opened="OnTabContextMenuOpened">
                        <MenuItem Header="_Set tab name..." InputGestureText="Ctrl+Shift+T" Command="{Binding SetTabNameCommand}" />
                        <Separator />
                        <MenuItem Header="_Clone" InputGestureText="Ctrl+T" Command="{Binding CloneCommand}" />
                        <MenuItem Header="_Defaults" Command="{Binding DefaultsCommand}" />
                        <MenuItem Header="_Properties" Command="{Binding PropertiesCommand}" />
                        <Separator />
                        <MenuItem Header="D_etach" InputGestureText="Ctrl+Shift+F4" Command="{Binding DetachCommand}" />
                        <MenuItem Header="C_lose" InputGestureText="Ctrl+F4" Command="{Binding CloseCommand}" />
                    </ContextMenu>
                </Button.ContextMenu>
            </Button>
            <DataTemplate.Triggers>
                <DataTrigger Binding="{Binding Active, Mode=OneWay}" Value="True">
                    <Setter TargetName="RootButton" Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}" />
                    <Setter TargetName="RootButton" Property="Background" Value="{DynamicResource {x:Static SystemColors.WindowBrushKey}}" />
                    <Setter TargetName="RootButton" Property="BorderBrush" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}" />
                </DataTrigger>
            </DataTemplate.Triggers>
        </DataTemplate>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>
        
        <Menu x:Name="MainMenu" Grid.Row="0">
            <MenuItem Header="_File" SubmenuOpened="OnFileMenuOpened">
                <Separator Tag="[End]" />
                <MenuItem Header="_Customize..." Command="{Binding CustomizeConsolesCommand}" />
                <Separator />
                <MenuItem Header="Save _tabs on exit" IsCheckable="True" IsChecked="{Binding AppSettings.SaveTabsOnExit, Mode=TwoWay}" ToolTip="When tabs are saved, they will be restored the next time you start the app." />
                <MenuItem Header="E_xit" InputGestureText="Alt+F4" Command="{Binding ExitCommand}" />
            </MenuItem>
            <MenuItem Header="_Grab" SubmenuOpened="OnGrabMenuOpened">
                <Separator Tag="[End]" />
                <MenuItem Header="_Auto Grab" IsCheckable="True" IsChecked="{Binding AppSettings.ConsoleGrabEnabled, Mode=TwoWay}" />
                <MenuItem Header="_Customize..." Command="{Binding CustomizeConsoleGrabCommand}" />
            </MenuItem>
            <MenuItem Header="_VS" SubmenuOpened="OnVsMenuOpened">
                <MenuItem Header="Updating..." IsEnabled="False" />
                <Separator Tag="[End]" />
                <MenuItem Header="_Install From Web" Command="{Binding VisualStudioDogfoodCommand}" Visibility="{Binding Source={x:Static dp:Program.IsNotMicrosoftDomain}, Converter={StaticResource BoolToVisibility}}" />
                <MenuItem Header="_Install Dogfood" Command="{Binding VisualStudioDogfoodCommand}" Visibility="{Binding Source={x:Static dp:Program.IsMicrosoftDomain}, Converter={StaticResource BoolToVisibility}}" />
                <MenuItem Header="Install _Branch" Command="{Binding InstallVisualStudioBranchCommand}" Visibility="{Binding Source={x:Static dp:Program.IsMicrosoftDomain}, Converter={StaticResource BoolToVisibility}}" />
                <Separator Tag="[End]" />
                <MenuItem Header="_Run VS Installer" Command="{Binding VisualStudioInstallerCommand}" />
            </MenuItem>
            <MenuItem Header="_Tools" SubmenuOpened="OnToolsMenuOpened">
                <Separator Tag="[End]" />
                <MenuItem Header="_Customize..." Command="{Binding CustomizeToolsCommand}" />
            </MenuItem>
            <MenuItem Header="_Links" SubmenuOpened="OnLinksMenuOpened">
                <Separator Tag="[End]" />
                <MenuItem Header="_Customize..." Command="{Binding CustomizeLinksCommand}" />
            </MenuItem>
            <MenuItem Header="_About" Command="{Binding AboutCommand}" />
        </Menu>

        <Button
            Grid.Row="1"
            BorderThickness="1"
            BorderBrush="#FF0000"
            Background="#FFCCCC"
            Padding="5"
            Command="{Binding ClearErrorTextCommand}"
            HorizontalContentAlignment="Left"
            Content="{Binding ErrorText}"
            Visibility="{Binding HasErrorText, Converter={StaticResource BoolToVisibility}}"/>

        <local:DragItemsControl
            x:Name="tabItemsControl"
            Grid.Row="3"
            Focusable="False"
            ItemsSource="{Binding Processes}"
            ItemsPanel="{StaticResource TabItemsPanelTemplate}"
            ItemTemplate="{StaticResource TabItemTemplate}" />

        <Border Grid.Row="4" x:Name="processHostHolder" BorderThickness="0" />
    </Grid>
</Window>
