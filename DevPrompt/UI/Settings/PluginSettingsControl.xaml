<UserControl
    x:Class="DevPrompt.UI.Settings.PluginSettingsControl"
    x:ClassModifier="internal"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:vm="clr-namespace:DevPrompt.UI.ViewModels"
    xmlns:dvm="clr-namespace:DevPrompt.UI.DesignerViewModels"
    xmlns:convert="clr-namespace:DevPrompt.Utility.Converters"
    xmlns:uis="clr-namespace:DevPrompt.UI.Settings"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    mc:Ignorable="d"
    MinWidth="350" MinHeight="200" d:DesignWidth="500" d:DesignHeight="250"
    DataContext="{Binding ViewModel,RelativeSource={RelativeSource Mode=Self}}"
    d:DataContext="{d:DesignInstance dvm:PluginsControlDesignerVM, IsDesignTimeCreatable=True}">
    <UserControl.Resources>
        <BooleanToVisibilityConverter x:Key="BoolToVisible" />
        <convert:ObjectToVisibilityConverter x:Key="ObjectToVisible" />
        <convert:BoolToCollapsedConverter x:Key="BoolToCollapsed" />
        <convert:BoolToNegativeConverter x:Key="BoolToNegative" />
        <convert:StringToVisibilityConverter x:Key="StringToVisible" />
        <uis:PluginStateToUpdateAvailableVisibility x:Key="PluginStateToUpdateAvailableVisibility" />
        <uis:PluginStateToInstallVisibility x:Key="PluginStateToInstallVisibility" />
        <uis:PluginStateToUpdateVisibility x:Key="PluginStateToUpdateVisibility" />
        <uis:MultiBusyToEnabledConverter x:Key="MultiBusyToEnabledConverter" />
        <system:Boolean x:Key="TrueValue">True</system:Boolean>
        <system:Boolean x:Key="FalseValue">False</system:Boolean>

        <!-- 18x18 icon in the upper right of the plugin's list item -->
        <uis:PluginStateIconTemplateSelector x:Key="PluginStateIconTemplateSelector">
            <!-- No icon -->
            <uis:PluginStateIconTemplateSelector.DefaultTemplate>
                <DataTemplate>
                    <Grid />
                </DataTemplate>
            </uis:PluginStateIconTemplateSelector.DefaultTemplate>

            <!-- Green checkbox for "installed" -->
            <uis:PluginStateIconTemplateSelector.InstalledTemplate>
                <DataTemplate DataType="{x:Type vm:IPluginVM}">
                    <Canvas Width="18" Height="18" Background="Transparent" ToolTip="Installed">
                        <Ellipse Width="18" Height="18" Fill="LimeGreen" />
                        <Polyline Stroke="White" StrokeThickness="3" Points="5.5,8.5 7.5,12.5 12.5,5.5" StrokeEndLineCap="Round" StrokeStartLineCap="Round" StrokeLineJoin="Round" />
                    </Canvas>
                </DataTemplate>
            </uis:PluginStateIconTemplateSelector.InstalledTemplate>

            <!-- Blue up arrow for "update available" -->
            <uis:PluginStateIconTemplateSelector.UpdateAvailableTemplate>
                <DataTemplate DataType="{x:Type vm:IPluginVM}">
                    <Canvas Width="18" Height="18" Background="Transparent" ToolTip="Update available">
                        <Ellipse Width="18" Height="18" Fill="MediumBlue" />
                        <Path Fill="White" Data="M 2,9 9,2 16,9 11,9 11,15 7,15 7,9 Z" />
                    </Canvas>
                </DataTemplate>
            </uis:PluginStateIconTemplateSelector.UpdateAvailableTemplate>

            <!-- Spinner for "busy", either installing or updating -->
            <uis:PluginStateIconTemplateSelector.BusyTemplate>
                <DataTemplate>
                    <Canvas Width="18" Height="18" Background="Transparent" ToolTip="Installing">
                        <Path x:Name="circles" Width="18" Height="18" StrokeThickness="4" Data="M 2,9 A 7,7 180 1 1 16,9 A 7,7 180 1 1 2,9" StrokeDashArray="0,1.5708" StrokeDashCap="Round" StrokeDashOffset="2" RenderTransformOrigin="0.5,0.5">
                            <Path.Stroke>
                                <LinearGradientBrush>
                                    <GradientStop Color="#7F000000"/>
                                    <GradientStop Color="#00000000" Offset="1"/>
                                </LinearGradientBrush>
                            </Path.Stroke>
                            <Path.RenderTransform>
                                <RotateTransform x:Name="circlesRotateTransform" Angle="0" />
                            </Path.RenderTransform>
                        </Path>
                    </Canvas>
                    <DataTemplate.Triggers>
                        <EventTrigger SourceName="circles" RoutedEvent="FrameworkElement.Loaded">
                            <BeginStoryboard x:Name="circlesStoryboard">
                                <Storyboard RepeatBehavior="Forever">
                                    <DoubleAnimation Storyboard.TargetName="circlesRotateTransform" Storyboard.TargetProperty="(RotateTransform.Angle)" From="0.0" To="360" Duration="0:0:1" />
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>
                        <EventTrigger SourceName="circles" RoutedEvent="FrameworkElement.Unloaded">
                            <StopStoryboard BeginStoryboardName="circlesStoryboard" />
                        </EventTrigger>
                    </DataTemplate.Triggers>
                </DataTemplate>
            </uis:PluginStateIconTemplateSelector.BusyTemplate>
        </uis:PluginStateIconTemplateSelector>

        <uis:PluginIconTemplateSelector x:Key="PluginIconTemplateSelector">
            <uis:PluginIconTemplateSelector.IconTemplate>
                <DataTemplate>
                    <Image Width="32" Height="32" Source="{Binding}" />
                </DataTemplate>
            </uis:PluginIconTemplateSelector.IconTemplate>
            <uis:PluginIconTemplateSelector.DefaultTemplate>
                <DataTemplate>
                    <Viewbox Width="32" Height="32" Stretch="Uniform" StretchDirection="Both">
                        <Canvas Width="50" Height="50" Background="Transparent">
                            <Rectangle StrokeThickness="3" Stroke="#80004880" Canvas.Left="9.65384615" Canvas.Top="9.65384615" Width="39.3461538" Height="39.3461538" RadiusX="10" RadiusY="10" />
                            <Ellipse StrokeThickness="3" Stroke="#80004880" Canvas.Left="1" Canvas.Top="1" Width="6.65384616" Height="6.65384616" />
                            <Ellipse StrokeThickness="3" Stroke="#80004880" Canvas.Left="15.42307689"  Canvas.Top="15.42307689" Width="7.61538462" Height="7.61538462" />
                            <Ellipse StrokeThickness="3" Stroke="#80004880" Canvas.Left="29.84615381" Canvas.Top="29.84615381" Width="13.38461538" Height="13.38461538" />
                        </Canvas>
                    </Viewbox>
                </DataTemplate>
            </uis:PluginIconTemplateSelector.DefaultTemplate>
        </uis:PluginIconTemplateSelector>

        <!-- List item for each plugin -->
        <DataTemplate x:Key="PluginDataTemplate" DataType="{x:Type vm:IPluginVM}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>
                <ContentControl Content="{Binding Icon}" ContentTemplateSelector="{StaticResource PluginIconTemplateSelector}" />
                <Grid Grid.Column="1" Margin="5,0,0,0">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto" />
                        <RowDefinition Height="Auto" />
                    </Grid.RowDefinitions>
                    <TextBlock Grid.Row="0" Text="{Binding Title}" FontWeight="Bold" FontSize="14" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" ToolTip="{Binding Title}" />
                    <TextBlock Grid.Row="1" Text="{Binding Description}" FontSize="12" TextWrapping="NoWrap" TextTrimming="CharacterEllipsis" ToolTip="{Binding Description}" />
                    <ContentControl Grid.Column="1" Grid.RowSpan="2" Content="{Binding State}" ContentTemplateSelector="{StaticResource PluginStateIconTemplateSelector}" VerticalAlignment="Top" />
                </Grid>
            </Grid>
        </DataTemplate>

        <!-- More details on the right side of the dialog -->
        <DataTemplate x:Key="PluginDetailsTemplate" DataType="{x:Type vm:IPluginVM}">
            <StackPanel Orientation="Vertical">
                <StackPanel.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="TextWrapping" Value="Wrap" />
                    </Style>
                </StackPanel.Resources>
                <TextBlock Visibility="{Binding Authors, Mode=OneWay, Converter={StaticResource StringToVisible}}">
                    <Run Text="Created By:" FontWeight="Bold" />
                    <Run Text="{Binding Authors, Mode=OneWay}" />
                </TextBlock>
                <TextBlock Visibility="{Binding State, Converter={StaticResource PluginStateToUpdateAvailableVisibility}, ConverterParameter={StaticResource TrueValue}}">
                    <Run Text="Version:" FontWeight="Bold" />
                    <Run Text="{Binding LatestVersion, Mode=OneWay}" />
                </TextBlock>
                <TextBlock Visibility="{Binding State, Converter={StaticResource PluginStateToUpdateAvailableVisibility}, ConverterParameter={StaticResource FalseValue}}">
                    <Run Text="Current Version:" FontWeight="Bold" />
                    <Run Text="{Binding InstalledVersion, Mode=OneWay}" />
                </TextBlock>
                <TextBlock Visibility="{Binding State, Converter={StaticResource PluginStateToUpdateAvailableVisibility}, ConverterParameter={StaticResource FalseValue}}">
                    <Run Text="New Version:" FontWeight="Bold" />
                    <Run Text="{Binding LatestVersion, Mode=OneWay}" />
                </TextBlock>
                <TextBlock Visibility="{Binding ProjectUrl, Mode=OneWay, Converter={StaticResource StringToVisible}}">
                    <Hyperlink NavigateUri="{Binding ProjectUrl, Mode=OneWay}" RequestNavigate="OnHyperlink">More information</Hyperlink>
                </TextBlock>
                <TextBlock Margin="0,10,0,0" Visibility="{Binding Summary, Mode=OneWay, Converter={StaticResource StringToVisible}}">
                    <Run Text="{Binding Summary, Mode=OneWay}" />
                </TextBlock>
            </StackPanel>
        </DataTemplate>
        <Style x:Key="PluginContainerStyle" TargetType="ListBoxItem">
            <Setter Property="HorizontalContentAlignment" Value="Stretch" />
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="175" />
        </Grid.ColumnDefinitions>
        <ListBox
            x:Name="pluginList"
            BorderThickness="0,0,1,0"
            ItemsSource="{Binding Plugins}"
            ItemTemplate="{StaticResource PluginDataTemplate}"
            ItemContainerStyle="{StaticResource PluginContainerStyle}"
            SelectedItem="{Binding CurrentPlugin, Mode=TwoWay}"
            ScrollViewer.HorizontalScrollBarVisibility="Disabled" />
        <Grid Grid.Column="1" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}">
            <Grid.Resources>
                <Style TargetType="Button">
                    <Setter Property="Width" Value="100" />
                    <Setter Property="HorizontalAlignment" Value="Center" />
                    <Setter Property="Margin" Value="0,0,0,5" />
                </Style>
            </Grid.Resources>
            <StackPanel Orientation="Vertical" Margin="5" Visibility="{Binding CurrentPlugin, Converter={StaticResource ObjectToVisible}}">
                <Button Content="Install" Command="{Binding InstallPluginCommand}" CommandParameter="{Binding CurrentPlugin}" Visibility="{Binding CurrentPlugin.State, Converter={StaticResource PluginStateToInstallVisibility}, ConverterParameter={StaticResource FalseValue}, FallbackValue=Collapsed}">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource MultiBusyToEnabledConverter}" ConverterParameter="{StaticResource FalseValue}">
                            <Binding Path="IsBusy" />
                            <Binding Path="CurrentPlugin.State" />
                            <Binding Path="CurrentPlugin" />
                        </MultiBinding>
                    </Button.IsEnabled>
                </Button>
                <Button Content="Update" Command="{Binding InstallPluginCommand}" CommandParameter="{Binding CurrentPlugin}" Visibility="{Binding CurrentPlugin.State, Converter={StaticResource PluginStateToUpdateVisibility}, ConverterParameter={StaticResource FalseValue}, FallbackValue=Collapsed}">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource MultiBusyToEnabledConverter}" ConverterParameter="{StaticResource FalseValue}">
                            <Binding Path="IsBusy" />
                            <Binding Path="CurrentPlugin.State" />
                            <Binding Path="CurrentPlugin" />
                        </MultiBinding>
                    </Button.IsEnabled>
                </Button>
                <Button Content="Uninstall" Command="{Binding UninstallPluginCommand}" CommandParameter="{Binding CurrentPlugin}" Visibility="{Binding CurrentPlugin.State, Converter={StaticResource PluginStateToInstallVisibility}, ConverterParameter={StaticResource TrueValue}, FallbackValue=Collapsed}">
                    <Button.IsEnabled>
                        <MultiBinding Converter="{StaticResource MultiBusyToEnabledConverter}" ConverterParameter="{StaticResource FalseValue}">
                            <Binding Path="IsBusy" />
                            <Binding Path="CurrentPlugin.State" />
                            <Binding Path="CurrentPlugin" />
                        </MultiBinding>
                    </Button.IsEnabled>
                </Button>
                <ContentControl Content="{Binding CurrentPlugin, Mode=OneWay}" ContentTemplate="{StaticResource PluginDetailsTemplate}" />
            </StackPanel>
        </Grid>
    </Grid>
</UserControl>
